===================
비밀번호 해시 테스트
===================

TestBcryptPasswordHasher
----------------------

빈 비밀번호 처리 (test_hash_with_empty_password)
""""""""""""""""""""""""""""""""""""""""""""
:시나리오:
    * 빈 문자열로 해시 생성 시도

:검증 항목:
    * ValueError 예외 발생
    * "Password cannot be empty" 메시지 포함

빈 입력값 검증 (test_verify_with_empty_inputs)
"""""""""""""""""""""""""""""""""""""""""
:시나리오:
    * 빈 비밀번호, 빈 해시로 검증
    * 비밀번호만 있고 해시가 빈 경우
    * 해시만 있고 비밀번호가 빈 경우

:검증 항목:
    * 모든 경우에 False 반환

해시 생성 및 검증 (test_hash_and_verify)
""""""""""""""""""""""""""""""""""
:시나리오:
    * 안전한 비밀번호로 해시 생성
    * 생성된 해시로 원본 비밀번호 검증

:검증 항목:
    * 해시가 문자열이며 비어있지 않음
    * bcrypt 형식 ($2b$로 시작)
    * 원본 비밀번호로 검증 성공

잘못된 비밀번호 검증 (test_verify_with_wrong_password)
""""""""""""""""""""""""""""""""""""""""""""""
:시나리오:
    * 원본과 다른 비밀번호로 검증 시도

:검증 항목:
    * False 반환

잘못된 해시 형식 (test_verify_with_invalid_hash)
""""""""""""""""""""""""""""""""""""""
:시나리오:
    * 다양한 잘못된 해시 형식으로 검증
    * (일반 문자열, 잘못된 bcrypt 형식, 한글, 바이너리, 긴 문자열)

:검증 항목:
    * 모든 경우에 False 반환

라운드 수에 따른 해시 차이 (test_different_rounds_produce_different_hashes)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
:시나리오:
    * 서로 다른 라운드 수로 해시 생성
    * 각각의 해시로 검증

:검증 항목:
    * 서로 다른 해시값 생성
    * 각각의 해시로 검증 성공
    * 라운드 수가 해시에 반영 ($2b$04$, $2b$05$)

테스트 설계 원칙
--------------

안전성
^^^^^
* 테스트용 비밀번호는 안전하게 생성
* 메모리에서 즉시 삭제
* 낮은 라운드 수 사용으로 테스트 성능 확보

예외 처리
^^^^^^^^
* 빈 입력 처리
* 잘못된 형식 처리
* 경계 조건 검증

검증 범위
^^^^^^^^
* 기능적 정확성
* 보안 요구사항 준수
* 성능 고려사항 (라운드 수) 