워크플로우
===========

본 프로젝트의 이벤트 기반 아키텍처(EDA)는 다양한 서비스 간의 상호작용을 비동기적으로 처리하여 확장성과 장애 격리를 극대화합니다. 각 작업의 흐름을 간단히 설명하면 다음과 같습니다:

예시: 요구사항 생성 워크플로우
------------------------------

1. **요구사항 생성 요청**
   - 사용자가 요구사항 생성 커맨드를 전송합니다. (`CreateRequirementCommand`)

2. **커맨드 처리**
   - 커맨드는 Command Bus를 통해 적절한 핸들러로 전달되며, 도메인 로직을 처리합니다.
   - 예를 들어, `CreateRequirementCommand`는 `Requirement` 엔티티의 생성과 관련된 로직을 수행합니다.

3. **이벤트 발행**
   - 도메인 로직 처리 후, 상태 변경을 나타내는 도메인 이벤트가 발행됩니다. (`RequirementCreatedEvent`)
   - 이 이벤트는 Event Bus에 의해 구독된 서비스에 전달됩니다.

4. **후속 작업 처리**
   - **조회 모델 업데이트**: 이벤트를 수신한 서비스가 조회 모델을 업데이트합니다.
   - **알림 전송**: 이벤트를 구독한 알림 서비스가 사용자의 요구사항 생성 성공을 알리는 알림을 전송합니다.

5. **비동기 처리 및 일관성 보장**
   - 후속 작업은 비동기로 처리되어 시스템 성능을 최적화하며, 최종적으로 모든 시스템이 일관된 상태를 유지하도록 합니다.
