.. _core_concepts:

핵심 개념
=========

본 문서는 진행 중인 프로젝트에 적용할 이벤트 기반 아키텍처(EDA)의 핵심 개념을 정리한 내부 참고 문서이다.
각 개념에 대한 정의와 구현 시 고려할 사항을 기술한다.

Event Sourcing
--------------

Event Sourcing은 시스템의 상태 변경을 **이벤트의 연속된 흐름으로 기록**하는 패턴이다.
모든 상태 변경이 `Event Store`에 보존되며, 이를 활용하여 시스템을 특정 시점으로 복원할 수 있다.

**구현 시 고려사항**

- 이벤트 저장 방식: Append-Only (수정 불가, 추가만 가능)
- 스냅샷 활용 여부 (이벤트 재생 속도 개선)
- 이벤트 재생 시점과 데이터 동기화 전략

예를 들어, 사용자가 요구사항을 생성하면 ``CreateRequirementCommand`` 가 처리된 후
``RequirementCreatedEvent`` 가 발행된다. 이후 Event Store에서 해당 이벤트들을 재생하여 현재 상태를 재구성할 수 있다.

CQRS (Command Query Responsibility Segregation)
-------------------------------------------------

CQRS는 **쓰기(Command)와 조회(Query)를 분리**하는 패턴이다.
이를 통해 성능 최적화와 데이터 일관성을 개별적으로 조정할 수 있다.

**장점**

- 쓰기 모델과 조회 모델을 개별적으로 최적화 가능
- 도메인 로직과 조회 로직이 분리되어 유지보수성 향상

**구현 예시**

- 프로젝트 생성 시 ``CreateProjectCommand`` 가 실행되면 **쓰기 모델**(Write Model)에 데이터 저장
- 이후 조회 요청이 들어오면 **별도 읽기 전용 모델**(Read Model)에서 데이터를 검색

Eventual Consistency
--------------------

Eventual Consistency는 **비동기 이벤트 처리로 인해 데이터 일관성이 즉시 보장되지 않지만, 일정 시간이 지나면 최종적으로 정합성을 유지하는 모델**이다.

예를 들어, ``RequirementCreatedEvent`` 가 발행된 후 조회 모델이 업데이트되기까지 약간의 지연이 발생할 수 있다.
이를 보완하기 위해:

- **이벤트 상태 모니터링** (ex. 이벤트 누락 감지)
- **비동기 재처리 메커니즘** (ex. 이벤트 소비 실패 시 재시도)

을 설계해야 한다.

.. _components:

구성 요소
=========

초기 설계 단계에서는 다음의 주요 구성 요소들을 고려한다.

Command Bus
-----------

Command Bus는 **클라이언트가 보낸 명령(Command)을 적절한 핸들러로 전달하는 역할**을 한다.

예: ``CreateRequirementCommand`` 가 전송되면 Command Bus가 등록된 핸들러를 찾아 실행

**핵심 기능**

- Command-Handler 매핑 관리
- 동기/비동기 명령 처리
- 미들웨어 적용 가능 (ex. 인증, 로깅, 트랜잭션)

Event Bus
---------

Event Bus는 **도메인 이벤트를 여러 서비스로 전달하여 후속 작업을 유도**한다.

**구독(Pub/Sub) 방식**

- **동기 처리**: 즉시 이벤트 소비
- **비동기 처리**: 큐(Kafka, RabbitMQ) 활용

예를 들어, ``RequirementCreatedEvent`` 가 발행되면 **알림 서비스, 조회 모델 서비스**가 이를 수신하여 후속 작업을 수행한다.

Event Store
-----------

Event Store는 **모든 이벤트를 영속적으로 저장**하며, 이를 활용하여 시스템을 복구하거나 감사(Audit) 로그를 유지한다.

**저장 방식**

- **Append-Only** 구조 (기존 이벤트 수정 불가)
- **스냅샷 적용 가능** (이벤트 개수가 많아질 경우 성능 최적화)

예를 들어, 시스템이 장애 발생 후 복구해야 할 경우, Event Store에 저장된 이벤트를 재생하여 최종 상태를 복원할 수 있다.
